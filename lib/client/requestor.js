// Generated by CoffeeScript 1.6.3
var extend, promised, queue, requestor, sequence, _ref;

_ref = require('../support'), extend = _ref.extend, promised = _ref.promised;

queue = require('./queue').queue;

sequence = require('when/sequence');

requestor = void 0;

exports.testable = function() {
  return requestor;
};

exports.requestor = extend(queue, function(superclass, config) {
  var api;
  if (config == null) {
    config = {};
  }
  config.transport || (config.transport = 'https');
  requestor = {
    superclass: superclass,
    request: promised(function(action, opts) {
      if (opts == null) {
        opts = {};
      }
      return sequence([
        function() {
          return superclass.enqueue({
            opts: opts
          });
        }, function() {
          return superclass.dequeue();
        }
      ]).then(function(_arg) {
        var NULL, requests;
        NULL = _arg[0], requests = _arg[1];
        console.log({
          SEND: requests
        });
        return action.resolve();
      }, action.reject, action.notify);
    })
  };
  return api = {
    request: requestor.request
  };
});
