// Generated by CoffeeScript 1.6.3
var RequestFilter, Requestor, defer, deferred, enclose, testable, _ref;

_ref = require('also'), enclose = _ref.enclose, deferred = _ref.deferred;

RequestFilter = require('../support').RequestFilter;

defer = require('when').defer;

Requestor = require('./requestor').Requestor;

testable = void 0;

exports._client = function() {
  return testable;
};

exports.Client = enclose(Requestor, function(requestor, config) {
  var api, client;
  client = {
    requestor: requestor,
    get: RequestFilter(function(opts, result) {
      if (result == null) {
        result = defer();
      }
      opts.method = 'GET';
      requestor.request(opts, result).then(function() {}, result.error, result.notify);
      return result.promise;
    }),
    post: RequestFilter(function(opts, result) {
      if (result == null) {
        result = defer();
      }
      opts.method = 'POST';
      requestor.request(opts, result).then(function() {}, result.error, result.notify);
      return result.promise;
    }),
    stats: deferred(function(action) {
      var notify, reject, resolve;
      resolve = action.resolve, reject = action.reject, notify = action.notify;
      return requestor.stats().then(resolve, reject, notify);
    })
  };
  testable = client;
  return api = {
    get: client.get,
    post: client.post,
    stats: client.stats
  };
});
