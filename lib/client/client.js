// Generated by CoffeeScript 1.6.3
var client, defer, deferred, enclose, requestor, _ref;

_ref = require('../support'), enclose = _ref.enclose, deferred = _ref.deferred;

defer = require('when').defer;

requestor = require('./requestor').requestor;

client = void 0;

exports.testable = function() {
  return client;
};

exports.client = enclose(requestor, function(superclass, config) {
  var api;
  client = {
    superclass: superclass,
    get: function(opts, result) {
      if (result == null) {
        result = defer();
      }
      opts.method = 'GET';
      superclass.request(opts, result).then(function() {}, result.error, result.notify);
      return result.promise;
    },
    stats: deferred(function(action) {
      var notify, reject, resolve;
      resolve = action.resolve, reject = action.reject, notify = action.notify;
      return superclass.stats().then(resolve, reject, notify);
    })
  };
  return api = {
    get: client.get,
    stats: client.stats
  };
});
