// Generated by CoffeeScript 1.6.3
var CookieStore, defer, https;

https = require('https');

defer = require('when').defer;

CookieStore = require('./cookie_store');

exports.create = function(config) {
  var authenticating, session;
  if (!((config != null) && (config.username != null) && (config.password != null) && (config.hostname != null))) {
    throw new Error('BasicAuth.create(config) requires config.username, config.password, config.hostname');
  }
  config.port || (config.port = 443);
  authenticating = false;
  return session = {
    cookies: CookieStore.create({
      hostname: config.username
    }),
    get: function(opts, deferral) {
      var cookie, request;
      if (opts == null) {
        opts = {};
      }
      if (deferral == null) {
        deferral = defer();
      }
      opts.method = 'GET';
      opts.path = '/';
      opts.headers || (opts.headers = {});
      cookie = session.cookies.getCookie();
      if (cookie != null) {
        opts.headers.cookie = cookie;
      }
      request = https.request({
        hostname: config.hostname,
        port: config.port,
        path: opts.path,
        auth: opts.auth,
        method: opts.method,
        headers: opts.headers
      }, function(response) {
        if (response.statusCode === 401) {
          if (authenticating) {
            deferral.reject(new Error('Authentication Failed'));
            authenticating = false;
            return;
          }
          opts.auth = "" + config.username + ":" + config.password;
          authenticating = true;
          session.get(opts, deferral);
        }
      });
      return deferral.promise;
    }
  };
};
